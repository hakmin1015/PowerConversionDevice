!=======================================================================
! Generated by: PSCAD v5.0.0.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Rectifier
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE RectifierDyn(Pulses)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Pulses(12)

! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2, GG1(2), RT_3, RT_4
      REAL     GG2(2), RT_5, RT_6, GG3(2), RT_7
      REAL     RT_8, GG4(2), RT_9, RT_10, GG5(2)
      REAL     RT_11, RT_12, GG6(2)

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 36
      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 13
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_1     = STOF(ISTOF + 13)
      RT_2     = STOF(ISTOF + 14)
      RT_3     = STOF(ISTOF + 17)
      RT_4     = STOF(ISTOF + 18)
      RT_5     = STOF(ISTOF + 21)
      RT_6     = STOF(ISTOF + 22)
      RT_7     = STOF(ISTOF + 25)
      RT_8     = STOF(ISTOF + 26)
      RT_9     = STOF(ISTOF + 29)
      RT_10    = STOF(ISTOF + 30)
      RT_11    = STOF(ISTOF + 33)
      RT_12    = STOF(ISTOF + 34)

! Array (1:2) quantities...
      DO IT_0 = 1,2
         GG1(IT_0) = STOF(ISTOF + 14 + IT_0)
         GG2(IT_0) = STOF(ISTOF + 18 + IT_0)
         GG3(IT_0) = STOF(ISTOF + 22 + IT_0)
         GG4(IT_0) = STOF(ISTOF + 26 + IT_0)
         GG5(IT_0) = STOF(ISTOF + 30 + IT_0)
         GG6(IT_0) = STOF(ISTOF + 34 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Rectifier.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[datatap] Scalar/Array Tap 
      RT_1 = Pulses(1)

! 30:[datatap] Scalar/Array Tap 
      RT_2 = Pulses(2)

! 40:[datatap] Scalar/Array Tap 
      RT_3 = Pulses(3)

! 50:[datatap] Scalar/Array Tap 
      RT_4 = Pulses(4)

! 60:[datatap] Scalar/Array Tap 
      RT_5 = Pulses(5)

! 70:[datatap] Scalar/Array Tap 
      RT_6 = Pulses(6)

! 80:[datatap] Scalar/Array Tap 
      RT_7 = Pulses(7)

! 90:[datatap] Scalar/Array Tap 
      RT_8 = Pulses(8)

! 100:[datatap] Scalar/Array Tap 
      RT_9 = Pulses(9)

! 110:[datatap] Scalar/Array Tap 
      RT_10 = Pulses(10)

! 120:[datamerge] Merges data signals into an array 
      GG1(1) = RT_1
      GG1(2) = RT_2

! 130:[datatap] Scalar/Array Tap 
      RT_11 = Pulses(11)

! 140:[datatap] Scalar/Array Tap 
      RT_12 = Pulses(12)

! 150:[datamerge] Merges data signals into an array 
      GG2(1) = RT_3
      GG2(2) = RT_4

! 160:[datamerge] Merges data signals into an array 
      GG3(1) = RT_5
      GG3(2) = RT_6

! 170:[datamerge] Merges data signals into an array 
      GG4(1) = RT_7
      GG4(2) = RT_8

! 180:[datamerge] Merges data signals into an array 
      GG5(1) = RT_9
      GG5(2) = RT_10

! 190:[datamerge] Merges data signals into an array 
      GG6(1) = RT_11
      GG6(2) = RT_12

! 200:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,364859371)
      CALL PESWITCH1_EXE(SS, (IBRCH+5), NINT(GG1(1)), GG1(2))

! 210:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1375702739)
      CALL PESWITCH1_EXE(SS, (IBRCH+8), NINT(GG3(1)), GG3(2))

! 220:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,209063167)
      CALL PESWITCH1_EXE(SS, (IBRCH+10), NINT(GG5(1)), GG5(2))

! 230:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1320383664)
      CALL PESWITCH1_EXE(SS, (IBRCH+6), NINT(GG4(1)), GG4(2))

! 240:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1141132495)
      CALL PESWITCH1_EXE(SS, (IBRCH+3), NINT(GG6(1)), GG6(2))

! 250:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,230675172)
      CALL PESWITCH1_EXE(SS, (IBRCH+12), NINT(GG2(1)), GG2(2))

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1598770885)
      CALL PESWITCH1_EXE(SS, (IBRCH+1), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,602063751)
      CALL PESWITCH1_EXE(SS, (IBRCH+9), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1723051461)
      CALL PESWITCH1_EXE(SS, (IBRCH+11), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,821374489)
      CALL PESWITCH1_EXE(SS, (IBRCH+7), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,266281273)
      CALL PESWITCH1_EXE(SS, (IBRCH+2), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,643524545)
      CALL PESWITCH1_EXE(SS, (IBRCH+4), 1, 0.0)

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 13) = RT_1
      STOF(ISTOF + 14) = RT_2
      STOF(ISTOF + 17) = RT_3
      STOF(ISTOF + 18) = RT_4
      STOF(ISTOF + 21) = RT_5
      STOF(ISTOF + 22) = RT_6
      STOF(ISTOF + 25) = RT_7
      STOF(ISTOF + 26) = RT_8
      STOF(ISTOF + 29) = RT_9
      STOF(ISTOF + 30) = RT_10
      STOF(ISTOF + 33) = RT_11
      STOF(ISTOF + 34) = RT_12

! Array (1:2) quantities...
      DO IT_0 = 1,2
         STOF(ISTOF + 14 + IT_0) = GG1(IT_0)
         STOF(ISTOF + 18 + IT_0) = GG2(IT_0)
         STOF(ISTOF + 22 + IT_0) = GG3(IT_0)
         STOF(ISTOF + 26 + IT_0) = GG4(IT_0)
         STOF(ISTOF + 30 + IT_0) = GG5(IT_0)
         STOF(ISTOF + 34 + IT_0) = GG6(IT_0)
      END DO

! Array (1:12) quantities...
      DO IT_0 = 1,12
         STOF(ISTOF + 0 + IT_0) = Pulses(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE RectifierOut()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    VBRANCH       ! Voltage across the branch

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 13
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------



!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Rectifier.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------



!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE RectifierDyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 13
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[datatap] Scalar/Array Tap 

! 30:[datatap] Scalar/Array Tap 

! 40:[datatap] Scalar/Array Tap 

! 50:[datatap] Scalar/Array Tap 

! 60:[datatap] Scalar/Array Tap 

! 70:[datatap] Scalar/Array Tap 

! 80:[datatap] Scalar/Array Tap 

! 90:[datatap] Scalar/Array Tap 

! 100:[datatap] Scalar/Array Tap 

! 110:[datatap] Scalar/Array Tap 

! 120:[datamerge] Merges data signals into an array 

! 130:[datatap] Scalar/Array Tap 

! 140:[datatap] Scalar/Array Tap 

! 150:[datamerge] Merges data signals into an array 

! 160:[datamerge] Merges data signals into an array 

! 170:[datamerge] Merges data signals into an array 

! 180:[datamerge] Merges data signals into an array 

! 190:[datamerge] Merges data signals into an array 

! 200:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

! 210:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

! 220:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

! 230:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

! 240:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

! 250:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,1.0e-05, 1000000.0, 100000.0, 100000.0, 0.&
     &0019, 0.0)

      RETURN
      END

!=======================================================================

      SUBROUTINE RectifierOut_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 13
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


      RETURN
      END

