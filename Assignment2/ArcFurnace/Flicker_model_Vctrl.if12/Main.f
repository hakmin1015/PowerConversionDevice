!=======================================================================
! Generated by: PSCAD v5.0.0.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Main
! Description   : Main Page
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE MainDyn(freq, lpfreq, notchfreq)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    EAF_FacilityDyn  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: freq, lpfreq
      REAL,    INTENT(IN)  :: notchfreq

! Electrical Node Indices
      INTEGER  NT_3(3), NT_16(3)

! Control Signals
      INTEGER  BRK_1, BRK_2
      REAL     BRK, Eln(3)

! Internal Variables
      INTEGER  IVD1_1, IVD1_2, IVD1_3, IVD1_4
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD1_7

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER ICX                                 ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 2
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 7
      ICX       = NCX
      NCX       = NCX + 1
      INODE     = NNODE + 2
      NNODE     = NNODE + 56
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 246
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 24
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      BRK      = STOF(ISTOF + 4)
      BRK_1    = STOI(ISTOI + 1)
      BRK_2    = STOI(ISTOI + 2)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Eln(IT_0) = STOF(ISTOF + 4 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_3(IT_0) = NODE(INODE + 6 + IT_0)
         NT_16(IT_0) = NODE(INODE + 45 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[tbreakn] Timed Breaker Logic 
! Timed breaker logic
      IF ( TIMEZERO ) THEN
         BRK_1 = 0
      ELSE
         BRK_1 = 0
         IF ( TIME .GE. 11111111.0 ) BRK_1 = (1-0)
      ENDIF

! 20:[tbreakn] Timed Breaker Logic 
! Timed breaker logic
      IF ( TIMEZERO ) THEN
         BRK_2 = 0
      ELSE
         BRK_2 = 0
         IF ( TIME .GE. 1111111111.0 ) BRK_2 = (1-0)
      ENDIF

! 30:[breaker3] 3 Phase Breaker 'BRK_1'
      IVD1_4 = NSTORI
      NSTORI = NSTORI + 3
! Three Phase Breaker
      CALL EMTDC_BREAKER1(SS, (IBRCH+22),0.1,1000000.0,RTCF(NRTCF),0,NIN&
     &T(1.0-REAL(BRK_1)))
      CALL EMTDC_BREAKER1(SS, (IBRCH+23),0.1,1000000.0,RTCF(NRTCF),0,NIN&
     &T(1.0-REAL(BRK_1)))
      CALL EMTDC_BREAKER1(SS, (IBRCH+24),0.1,1000000.0,RTCF(NRTCF),0,NIN&
     &T(1.0-REAL(BRK_1)))
!
      IVD1_1 = 2*E_BtoI(OPENBR( (IBRCH+22),SS))
      IVD1_2 = 2*E_BtoI(OPENBR( (IBRCH+23),SS))
      IVD1_3 = 2*E_BtoI(OPENBR( (IBRCH+24),SS))
      NRTCF = NRTCF + 1
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+0) .NE. IVD1_1)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1771568347,IVD1_1,"BOpen1")
      ENDIF
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+1) .NE. IVD1_2)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1771568347,IVD1_2,"BOpen2")
      ENDIF
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+2) .NE. IVD1_3)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1771568347,IVD1_3,"BOpen3")
      ENDIF
      STORI(IVD1_4+0) = 2*E_BtoI(OPENBR( (IBRCH+22),SS))
      STORI(IVD1_4+1) = 2*E_BtoI(OPENBR( (IBRCH+23),SS))
      STORI(IVD1_4+2) = 2*E_BtoI(OPENBR( (IBRCH+24),SS))

! 40:[breaker3] 3 Phase Breaker 'BRK_2'
      IVD1_4 = NSTORI
      NSTORI = NSTORI + 3
! Three Phase Breaker
      CALL EMTDC_BREAKER1(SS, (IBRCH+19),0.1,1000000.0,RTCF(NRTCF),0,NIN&
     &T(1.0-REAL(BRK_2)))
      CALL EMTDC_BREAKER1(SS, (IBRCH+20),0.1,1000000.0,RTCF(NRTCF),0,NIN&
     &T(1.0-REAL(BRK_2)))
      CALL EMTDC_BREAKER1(SS, (IBRCH+21),0.1,1000000.0,RTCF(NRTCF),0,NIN&
     &T(1.0-REAL(BRK_2)))
!
      IVD1_1 = 2*E_BtoI(OPENBR( (IBRCH+19),SS))
      IVD1_2 = 2*E_BtoI(OPENBR( (IBRCH+20),SS))
      IVD1_3 = 2*E_BtoI(OPENBR( (IBRCH+21),SS))
      NRTCF = NRTCF + 1
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+0) .NE. IVD1_1)) THEN
         CALL PSCAD_AGI2(ICALL_NO,2132659568,IVD1_1,"BOpen1")
      ENDIF
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+1) .NE. IVD1_2)) THEN
         CALL PSCAD_AGI2(ICALL_NO,2132659568,IVD1_2,"BOpen2")
      ENDIF
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+2) .NE. IVD1_3)) THEN
         CALL PSCAD_AGI2(ICALL_NO,2132659568,IVD1_3,"BOpen3")
      ENDIF
      STORI(IVD1_4+0) = 2*E_BtoI(OPENBR( (IBRCH+19),SS))
      STORI(IVD1_4+1) = 2*E_BtoI(OPENBR( (IBRCH+20),SS))
      STORI(IVD1_4+2) = 2*E_BtoI(OPENBR( (IBRCH+21),SS))

! 50:[var_switch] Two State Switch 'System Breaker'
      BRK = CX(CXMAP(ICX+1))

! 70:[breaker3] 3 Phase Breaker 'BRK'
      IVD1_4 = NSTORI
      NSTORI = NSTORI + 3
! Three Phase Breaker
      CALL EMTDC_BREAKER1(SS, (IBRCH+1),1.0e-06,1000000.0,RTCF(NRTCF),0,&
     &NINT(1.0-BRK))
      CALL EMTDC_BREAKER1(SS, (IBRCH+2),1.0e-06,1000000.0,RTCF(NRTCF),0,&
     &NINT(1.0-BRK))
      CALL EMTDC_BREAKER1(SS, (IBRCH+3),1.0e-06,1000000.0,RTCF(NRTCF),0,&
     &NINT(1.0-BRK))
!
      IVD1_1 = 2*E_BtoI(OPENBR( (IBRCH+1),SS))
      IVD1_2 = 2*E_BtoI(OPENBR( (IBRCH+2),SS))
      IVD1_3 = 2*E_BtoI(OPENBR( (IBRCH+3),SS))
      NRTCF = NRTCF + 1
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+0) .NE. IVD1_1)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1487214899,IVD1_1,"BOpen1")
      ENDIF
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+1) .NE. IVD1_2)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1487214899,IVD1_2,"BOpen2")
      ENDIF
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+2) .NE. IVD1_3)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1487214899,IVD1_3,"BOpen3")
      ENDIF
      STORI(IVD1_4+0) = 2*E_BtoI(OPENBR( (IBRCH+1),SS))
      STORI(IVD1_4+1) = 2*E_BtoI(OPENBR( (IBRCH+2),SS))
      STORI(IVD1_4+2) = 2*E_BtoI(OPENBR( (IBRCH+3),SS))

! 80:[EAF_Facility]  
      CALL EAF_FacilityDyn()


! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
!  3-Phase source: Source1
      RVD1_1 = RTCF(NRTCF+12)
      RVD1_2 = RTCF(NRTCF+14)
      RVD1_3 = RTCF(NRTCF+13)
      CALL ESYS651_EXE(SS, (IBRCH+4), (IBRCH+5), (IBRCH+6), (IBRCH+7), (&
     &IBRCH+8), (IBRCH+9), SS, NT_3(1),NT_3(2),NT_3(3), 0, RVD1_2, RVD1_&
     &1, 0.05, 1.0, 1.0, 1.0,RVD1_3, 1.0,0.02,0.05, 1.0,0.02,0.05, RVD1_&
     &4, RVD1_5, RVD1_6, RVD1_7)

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+16), (IBRCH+17), (IBRCH+18),SS,1.0,0)

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+178), (IBRCH+179), (IBRCH+180),SS,1.0,0)

! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
!  3-Phase source: Source1
      RVD1_1 = RTCF(NRTCF+12)
      RVD1_2 = RTCF(NRTCF+14)
      RVD1_3 = RTCF(NRTCF+13)
      CALL ESYS651_EXE(SS, (IBRCH+181), (IBRCH+182), (IBRCH+183), (IBRCH&
     &+184), (IBRCH+185), (IBRCH+186), SS, NT_16(1),NT_16(2),NT_16(3), 0&
     &, RVD1_2, RVD1_1, 0.05, 1.0, 1.0, 1.0,RVD1_3, 1.0,0.02,0.05, 1.0,0&
     &.02,0.05, RVD1_4, RVD1_5, RVD1_6, RVD1_7)

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+145), (IBRCH+146), (IBRCH+147),SS,1.0,0)

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 4) = BRK
      STOI(ISTOI + 1) = BRK_1
      STOI(ISTOI + 2) = BRK_2

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 4 + IT_0) = Eln(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    VBRANCH       ! 
      REAL    EMTDC_VVDC    ! 
!     SUBR    EAF_FacilityOut  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices
      INTEGER  NT_2(3)

! Control Signals
      REAL     Eln(3)

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NCX       = NCX + 0
      INODE     = NNODE + 2
      NNODE     = NNODE + 56
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 246
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 24
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         Eln(IT_0) = STOF(ISTOF + 4 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_2(IT_0) = NODE(INODE + 3 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[breaker3] 3 Phase Breaker 'BRK_1'
! Three Phase Breaker Currents
      CALL BRK_POWER(SS, (IBRCH+22), (IBRCH+23), (IBRCH+24),0,0,0,IVD1_1&
     &,0.02,RVD1_1,RVD1_2)

! 40:[breaker3] 3 Phase Breaker 'BRK_2'
! Three Phase Breaker Currents
      CALL BRK_POWER(SS, (IBRCH+19), (IBRCH+20), (IBRCH+21),0,0,0,IVD1_1&
     &,0.02,RVD1_1,RVD1_2)

! 60:[voltmetergnd] Voltmeter (Line - Ground) 'Eln'
      Eln(1) = EMTDC_VVDC(SS, NT_2(1), 0)
      Eln(2) = EMTDC_VVDC(SS, NT_2(2), 0)
      Eln(3) = EMTDC_VVDC(SS, NT_2(3), 0)

! 70:[breaker3] 3 Phase Breaker 'BRK'
! Three Phase Breaker Currents
      CALL BRK_POWER(SS, (IBRCH+1), (IBRCH+2), (IBRCH+3),0,0,0,IVD1_1,0.&
     &02,RVD1_1,RVD1_2)

! 80:[EAF_Facility]  
      CALL EAF_FacilityOut()


! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
! Calculate ource currents for ESYS65_B
! Sum currents in self and mutual interface branches

! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
! Calculate ource currents for ESYS65_B
! Sum currents in self and mutual interface branches

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 4 + IT_0) = Eln(IT_0)
      END DO


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainDyn_Begin(freq, lpfreq, notchfreq)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    EAF_FacilityDyn_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: freq, lpfreq
      REAL,    INTENT(IN)  :: notchfreq

! Electrical Node Indices

! Control Signals

! Internal Variables
      INTEGER  IVD1_1, IVD1_2, IVD1_3, IVD1_4
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ICX                                 ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ICX       = NCX
      NCX       = NCX + 1
      INODE     = NNODE + 2
      NNODE     = NNODE + 56
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 246
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 24
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[breaker3] 3 Phase Breaker 'BRK_1'
      CALL COMPONENT_ID(ICALL_NO,1771568347)
      RTCF(NRTCF) = ABS(0.0)
      NRTCF = NRTCF + 1

! 40:[breaker3] 3 Phase Breaker 'BRK_2'
      CALL COMPONENT_ID(ICALL_NO,2132659568)
      RTCF(NRTCF) = ABS(0.0)
      NRTCF = NRTCF + 1

! 50:[var_switch] Two State Switch 'System Breaker'

! 70:[breaker3] 3 Phase Breaker 'BRK'
      CALL COMPONENT_ID(ICALL_NO,1487214899)
      RTCF(NRTCF) = ABS(0.0)
      NRTCF = NRTCF + 1

! 80:[EAF_Facility]  
      CALL EAF_FacilityDyn_Begin()


! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
      CALL COMPONENT_ID(ICALL_NO,1125458733)
      RVD1_1 = 1.0
      RVD1_2 = 0.1
      CALL ESYS651_CFG(3,4,1,1,0,SS, (IBRCH+4), (IBRCH+5), (IBRCH+6), (I&
     &BRCH+7), (IBRCH+8), (IBRCH+9), 60.0,60.0,0.0,46.0,0.0,0.0,100.0,46&
     &.0, 46.0, 3.0, 85.0, 2.0, 1.0,1.0,0.1, 1.0,80.0,1.0,0.1)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,896400005)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,0.0569,0.2383,0.251,1&
     &.5,1.5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2&
     &,IVD1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+43),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+44),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+45),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+46),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+47),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+48),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+49),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+50),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+51),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+52),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+53),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+54),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 1),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5)

! 1:[resistive_load] Three phase resistive load 
      CALL COMPONENT_ID(ICALL_NO,1203270400)
      CALL RESLOAD_CFG(SS, (IBRCH+25), (IBRCH+26), (IBRCH+27),0,3.0,46.0&
     &)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,1024321367)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,0.1377,0.382,0.431,1.&
     &5,1.5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,&
     &IVD1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+187),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+188),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+189),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+190),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+191),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+192),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+193),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+194),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+195),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+196),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+197),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+198),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 2),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,1564726356)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,0.663,2.77,2.94,1.5,1&
     &.5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,IVD&
     &1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+79),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+80),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+81),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+82),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+83),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+84),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+85),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+86),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+87),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+88),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+89),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+90),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 3),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5)

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      CALL COMPONENT_ID(ICALL_NO,321490003)
      RVD1_1 = ONE_3RD*50.0
      RVD1_2 = 46.0*SQRT_1BY3
      RVD1_3 = 23.0*SQRT_1BY3
      CALL E_TF2W_CFG((IXFMR + 4),0,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,2&
     &.0)
      CALL E_TF2W_CFG((IXFMR + 5),0,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,2&
     &.0)
      CALL E_TF2W_CFG((IXFMR + 6),0,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,2&
     &.0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(50.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+10),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+11),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+12),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+13),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+14),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+15),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+16), (IBRCH+17), (IBRCH+18),SS,RVD1_1,RVD1_&
     &2,0.2,1.25,60.0,1.0,2.0,0.1)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,637382501)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,1.01,2.82,3.17,1.5,1.&
     &5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,IVD1&
     &_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+115),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+116),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+117),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+118),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+119),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+120),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+121),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+122),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+123),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+124),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+125),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+126),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 7),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5)

! 1:[resistive_load] Three phase resistive load 
      CALL COMPONENT_ID(ICALL_NO,1581255966)
      CALL RESLOAD_CFG(SS, (IBRCH+28), (IBRCH+29), (IBRCH+30),0,5.0,23.0&
     &)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,1354590892)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,0.7696,0.4676,1.73,1.&
     &5,1.5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,&
     &IVD1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+211),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+212),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+213),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+214),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+215),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+216),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+217),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+218),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+219),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+220),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+221),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+222),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 8),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,813153670)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,0.783,3.9226,4.08,1.5&
     &,1.5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,I&
     &VD1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+91),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+92),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+93),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+94),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+95),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+96),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+97),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+98),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+99),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+100),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+101),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+102),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 9),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5)

! 1:[resistive_load] Three phase resistive load 
      CALL COMPONENT_ID(ICALL_NO,1366004407)
      CALL RESLOAD_CFG(SS, (IBRCH+37), (IBRCH+38), (IBRCH+39),0,12.0,46.&
     &0)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,647364245)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,0.15,0.09,0.33,1.5,1.&
     &5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,IVD1&
     &_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+199),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+200),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+201),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+202),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+203),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+204),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+205),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+206),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+207),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+208),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+209),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+210),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 10),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5&
     &)

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      CALL COMPONENT_ID(ICALL_NO,1229544386)
      RVD1_1 = ONE_3RD*30.0
      RVD1_2 = 46.0*SQRT_1BY3
      RVD1_3 = 23.0*SQRT_1BY3
      CALL E_TF2W_CFG((IXFMR + 11),0,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,&
     &2.0)
      CALL E_TF2W_CFG((IXFMR + 12),0,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,&
     &2.0)
      CALL E_TF2W_CFG((IXFMR + 13),0,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,&
     &2.0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(30.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+172),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+173),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+174),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+175),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+176),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+177),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+178), (IBRCH+179), (IBRCH+180),SS,RVD1_1,RV&
     &D1_2,0.2,1.25,60.0,1.0,2.0,0.1)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,1067809260)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,5.97,3.63,13.5,1.5,1.&
     &5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,IVD1&
     &_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+127),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+128),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+129),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+130),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+131),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+132),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+133),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+134),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+135),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+136),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+137),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+138),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 14),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5&
     &)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,980287137)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,7.07,4.3,15.94,1.5,1.&
     &5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,IVD1&
     &_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+67),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+68),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+69),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+70),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+71),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+72),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+73),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+74),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+75),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+76),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+77),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+78),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 15),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5&
     &)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,828056366)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,1.6476,4.57,5.16,1.5,&
     &1.5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,IV&
     &D1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+55),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+56),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+57),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+58),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+59),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+60),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+61),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+62),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+63),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+64),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+65),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+66),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 16),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5&
     &)

! 1:[resistive_load] Three phase resistive load 
      CALL COMPONENT_ID(ICALL_NO,1073186922)
      CALL RESLOAD_CFG(SS, (IBRCH+40), (IBRCH+41), (IBRCH+42),0,10.0,23.&
     &0)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,298486719)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,5.55,4.32,11.5,1.5,1.&
     &5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,IVD1&
     &_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+235),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+236),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+237),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+238),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+239),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+240),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+241),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+242),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+243),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+244),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+245),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+246),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 17),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5&
     &)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,1801219790)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,0.003,0.0083,0.0094,1&
     &.5,1.5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2&
     &,IVD1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+148),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+149),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+150),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+151),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+152),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+153),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+154),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+155),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+156),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+157),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+158),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+159),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 18),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5&
     &)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,1719979026)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,3.4883,3.1219,7.02,1.&
     &5,1.5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,&
     &IVD1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+103),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+104),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+105),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+106),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+107),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+108),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+109),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+110),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+111),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+112),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+113),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+114),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 19),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5&
     &)

! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
      CALL COMPONENT_ID(ICALL_NO,1602509952)
      RVD1_1 = 1.0
      RVD1_2 = 0.1
      CALL ESYS651_CFG(3,4,1,1,0,SS, (IBRCH+181), (IBRCH+182), (IBRCH+18&
     &3), (IBRCH+184), (IBRCH+185), (IBRCH+186), 60.0,60.0,0.0,46.0,0.0,&
     &0.0,100.0,46.0, 46.0, 5.03, 85.0, 2.0, 1.0,1.0,0.1, 1.0,80.0,1.0,0&
     &.1)

! 1:[resistive_load] Three phase resistive load 
      CALL COMPONENT_ID(ICALL_NO,875388826)
      CALL RESLOAD_CFG(SS, (IBRCH+34), (IBRCH+35), (IBRCH+36),0,5.0,46.0&
     &)

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      CALL COMPONENT_ID(ICALL_NO,937571153)
      RVD1_1 = ONE_3RD*30.0
      RVD1_2 = 46.0*SQRT_1BY3
      RVD1_3 = 23.0*SQRT_1BY3
      CALL E_TF2W_CFG((IXFMR + 20),0,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,&
     &2.0)
      CALL E_TF2W_CFG((IXFMR + 21),0,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,&
     &2.0)
      CALL E_TF2W_CFG((IXFMR + 22),0,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,&
     &2.0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(30.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+139),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+140),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+141),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+142),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+143),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+144),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+145), (IBRCH+146), (IBRCH+147),SS,RVD1_1,RV&
     &D1_2,0.2,1.25,60.0,1.0,2.0,0.1)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,1082413044)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,10.95,6.65,25.0,1.5,1&
     &.5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,IVD&
     &1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+160),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+161),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+162),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+163),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+164),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+165),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+166),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+167),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+168),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+169),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+170),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+171),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 23),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5&
     &)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,476162372)
      CALL PI3_SECTION_CFG(1,1,1, 0.0,0.0,60.0,1.0,3.797,2.3,8.55,1.5,1.&
     &5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,IVD1&
     &_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+223),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+224),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+225),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+226),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+227),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+228),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+229),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+230),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+231),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+232),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+233),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+234),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 24),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5&
     &)

! 1:[resistive_load] Three phase resistive load 
      CALL COMPONENT_ID(ICALL_NO,663526612)
      CALL RESLOAD_CFG(SS, (IBRCH+31), (IBRCH+32), (IBRCH+33),0,20.0,23.&
     &0)

      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut_Begin(freq, lpfreq, notchfreq)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    EAF_FacilityOut_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: freq, lpfreq
      REAL,    INTENT(IN)  :: notchfreq

! Electrical Node Indices
      INTEGER  NT_2(3)

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NCX       = NCX + 0
      INODE     = NNODE + 2
      NNODE     = NNODE + 56
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 246
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 24
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_2(IT_0) = NODE(INODE + 3 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 80:[EAF_Facility]  
      CALL EAF_FacilityOut_Begin()


      RETURN
      END

